/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Defines the attributes for a single Cloud element
 * @record
 */
export function CloudData() { }
if (false) {
    /**
     * Set the text string for the Cloud element
     * @type {?}
     */
    CloudData.prototype.text;
    /**
     * set the weight for the element.
     *
     * The `weight` property defines the relative importance of the word (such as the number of occurrencies, etc.).
     * The range of values is arbitrary, and they will be linearly mapped to a discrete scale from 1 to 10.
     * In fact passing just one word to the array has the effect that this is relative to other elements.
     * As there aren't any other elements in that case it's result is that the element becomes a container
     * with the class `w5` - right in the middle of the discret scale.
     * The given value for `weight` is not directly mapped to the CSS-class.
     * For example you can use also a value like `123` or `34` - it will always be mapped to a scale from 1 to 10
     * relativly to the other array elements.
     * If you don't want that the tag cloud is calculating the values manually,
     * set the `strict` property to `true` and use integer values `1` to `10` within the `weight` property.
     * @type {?|undefined}
     */
    CloudData.prototype.weight;
    /**
     * Specifies optionally a link target for this element
     * @type {?|undefined}
     */
    CloudData.prototype.link;
    /**
     * If you configured a link for this element, you can set the value for `external` to true, so force the link to be opened in a new tab.
     * @type {?|undefined}
     */
    CloudData.prototype.external;
    /**
     * Specifies a valid CSS color string for colorizing the element.
     * This will override probably your CSS setttings
     * @type {?|undefined}
     */
    CloudData.prototype.color;
    /**
     * Set a value between 1 and 360 degrees to let the word appear rotated
     * @type {?|undefined}
     */
    CloudData.prototype.rotate;
    /**
     * Define a tooltip text
     * @type {?|undefined}
     */
    CloudData.prototype.tooltip;
}
/**
 * Specify options for the whole TagCloud
 * @record
 */
export function CloudOptions() { }
if (false) {
    /**
     * Defines the width of the TacCloud container
     * @type {?|undefined}
     */
    CloudOptions.prototype.width;
    /**
     * Defines the height of the TacCloud container
     * @type {?|undefined}
     */
    CloudOptions.prototype.height;
    /**
     * Defines weather elements that does not fit in the container should be hidden or just cutted at the container borders
     * @type {?|undefined}
     */
    CloudOptions.prototype.overflow;
    /**
     * Defines weather to use strict weight or calculate it by given values
     * @type {?|undefined}
     */
    CloudOptions.prototype.strict;
    /**
     * Define Option which will take effect when hovering with the cursor over the elements
     * @type {?|undefined}
     */
    CloudOptions.prototype.zoomOnHover;
    /**
     * Enable or disable automatic resize if boundaries are changing
     * @type {?|undefined}
     */
    CloudOptions.prototype.realignOnResize;
    /**
     * Enable or disable randomly determining an angle when it is not explicitly set
     * @type {?|undefined}
     */
    CloudOptions.prototype.randomizeAngle;
    /**
     * steps for the next check if element fits into cloud (circular detection)
     * @type {?|undefined}
     */
    CloudOptions.prototype.step;
    /**
     * Activate logging for debug purpose
     * @type {?|undefined}
     */
    CloudOptions.prototype.log;
    /**
     * Define a background which should be used for the cloud.
     * The syntax follows the CSS background property
     * @see https://www.w3schools.com/cssref/css3_pr_background.asp
     * @type {?|undefined}
     */
    CloudOptions.prototype.background;
    /**
     * Define the basic font which should be used for the cloud.
     * The syntax follows the CSS font property
     * @see https://www.w3schools.com/cssref/pr_font_font.asp
     * @type {?|undefined}
     */
    CloudOptions.prototype.font;
}
/**
 * Specify Options for elements that will be hovered by the cursor
 * @record
 */
export function ZoomOnHoverOptions() { }
if (false) {
    /**
     * Set the scale for the zoom
     * @type {?}
     */
    ZoomOnHoverOptions.prototype.scale;
    /**
     * Set optionally a time value for the transition from the current element size to this one defines in `scale`.
     * @type {?|undefined}
     */
    ZoomOnHoverOptions.prototype.transitionTime;
    /**
     * Set optionally a delay (in seconds). Setting this e.g. to `2` will have the effect that the zoom will appear with 2s delay time.
     * @type {?|undefined}
     */
    ZoomOnHoverOptions.prototype.delay;
    /**
     * Define a color which will replace the current color when hovering over the item.
     * This will override probably your CSS setttings
     * @type {?|undefined}
     */
    ZoomOnHoverOptions.prototype.color;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLWNsb3VkLmludGVyZmFjZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXRhZy1jbG91ZC1tb2R1bGUvIiwic291cmNlcyI6WyJsaWIvdGFnLWNsb3VkLmludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQSwrQkF5Q0M7Ozs7OztJQXJDQyx5QkFBYTs7Ozs7Ozs7Ozs7Ozs7OztJQWViLDJCQUFnQjs7Ozs7SUFJaEIseUJBQWM7Ozs7O0lBSWQsNkJBQW1COzs7Ozs7SUFLbkIsMEJBQWU7Ozs7O0lBSWYsMkJBQWdCOzs7OztJQUloQiw0QkFBaUI7Ozs7OztBQU1uQixrQ0FpREM7Ozs7OztJQTdDQyw2QkFBZTs7Ozs7SUFJZiw4QkFBZ0I7Ozs7O0lBSWhCLGdDQUFtQjs7Ozs7SUFJbkIsOEJBQWlCOzs7OztJQUlqQixtQ0FBaUM7Ozs7O0lBSWpDLHVDQUEwQjs7Ozs7SUFJMUIsc0NBQXlCOzs7OztJQUl6Qiw0QkFBYzs7Ozs7SUFJZCwyQkFBK0I7Ozs7Ozs7SUFNL0Isa0NBQW9COzs7Ozs7O0lBTXBCLDRCQUFjOzs7Ozs7QUFNaEIsd0NBa0JDOzs7Ozs7SUFkQyxtQ0FBYzs7Ozs7SUFJZCw0Q0FBd0I7Ozs7O0lBSXhCLG1DQUFlOzs7Ozs7SUFLZixtQ0FBZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGVmaW5lcyB0aGUgYXR0cmlidXRlcyBmb3IgYSBzaW5nbGUgQ2xvdWQgZWxlbWVudFxuICovXG5leHBvcnQgaW50ZXJmYWNlIENsb3VkRGF0YSB7XG4gIC8qKlxuICAgKiBTZXQgdGhlIHRleHQgc3RyaW5nIGZvciB0aGUgQ2xvdWQgZWxlbWVudFxuICAgKi9cbiAgdGV4dDogc3RyaW5nO1xuICAvKipcbiAgICogc2V0IHRoZSB3ZWlnaHQgZm9yIHRoZSBlbGVtZW50LlxuICAgKlxuICAgKiBUaGUgYHdlaWdodGAgcHJvcGVydHkgZGVmaW5lcyB0aGUgcmVsYXRpdmUgaW1wb3J0YW5jZSBvZiB0aGUgd29yZCAoc3VjaCBhcyB0aGUgbnVtYmVyIG9mIG9jY3VycmVuY2llcywgZXRjLikuXG4gICAqIFRoZSByYW5nZSBvZiB2YWx1ZXMgaXMgYXJiaXRyYXJ5LCBhbmQgdGhleSB3aWxsIGJlIGxpbmVhcmx5IG1hcHBlZCB0byBhIGRpc2NyZXRlIHNjYWxlIGZyb20gMSB0byAxMC5cbiAgICogSW4gZmFjdCBwYXNzaW5nIGp1c3Qgb25lIHdvcmQgdG8gdGhlIGFycmF5IGhhcyB0aGUgZWZmZWN0IHRoYXQgdGhpcyBpcyByZWxhdGl2ZSB0byBvdGhlciBlbGVtZW50cy5cbiAgICogQXMgdGhlcmUgYXJlbid0IGFueSBvdGhlciBlbGVtZW50cyBpbiB0aGF0IGNhc2UgaXQncyByZXN1bHQgaXMgdGhhdCB0aGUgZWxlbWVudCBiZWNvbWVzIGEgY29udGFpbmVyXG4gICAqIHdpdGggdGhlIGNsYXNzIGB3NWAgLSByaWdodCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBkaXNjcmV0IHNjYWxlLlxuICAgKiBUaGUgZ2l2ZW4gdmFsdWUgZm9yIGB3ZWlnaHRgIGlzIG5vdCBkaXJlY3RseSBtYXBwZWQgdG8gdGhlIENTUy1jbGFzcy5cbiAgICogRm9yIGV4YW1wbGUgeW91IGNhbiB1c2UgYWxzbyBhIHZhbHVlIGxpa2UgYDEyM2Agb3IgYDM0YCAtIGl0IHdpbGwgYWx3YXlzIGJlIG1hcHBlZCB0byBhIHNjYWxlIGZyb20gMSB0byAxMFxuICAgKiByZWxhdGl2bHkgdG8gdGhlIG90aGVyIGFycmF5IGVsZW1lbnRzLlxuICAgKiBJZiB5b3UgZG9uJ3Qgd2FudCB0aGF0IHRoZSB0YWcgY2xvdWQgaXMgY2FsY3VsYXRpbmcgdGhlIHZhbHVlcyBtYW51YWxseSxcbiAgICogc2V0IHRoZSBgc3RyaWN0YCBwcm9wZXJ0eSB0byBgdHJ1ZWAgYW5kIHVzZSBpbnRlZ2VyIHZhbHVlcyBgMWAgdG8gYDEwYCB3aXRoaW4gdGhlIGB3ZWlnaHRgIHByb3BlcnR5LlxuICAgKi9cbiAgd2VpZ2h0PzogbnVtYmVyO1xuICAvKipcbiAgICogU3BlY2lmaWVzIG9wdGlvbmFsbHkgYSBsaW5rIHRhcmdldCBmb3IgdGhpcyBlbGVtZW50XG4gICAqL1xuICBsaW5rPzogc3RyaW5nO1xuICAvKipcbiAgICogSWYgeW91IGNvbmZpZ3VyZWQgYSBsaW5rIGZvciB0aGlzIGVsZW1lbnQsIHlvdSBjYW4gc2V0IHRoZSB2YWx1ZSBmb3IgYGV4dGVybmFsYCB0byB0cnVlLCBzbyBmb3JjZSB0aGUgbGluayB0byBiZSBvcGVuZWQgaW4gYSBuZXcgdGFiLlxuICAgKi9cbiAgZXh0ZXJuYWw/OiBib29sZWFuO1xuICAvKipcbiAgICogU3BlY2lmaWVzIGEgdmFsaWQgQ1NTIGNvbG9yIHN0cmluZyBmb3IgY29sb3JpemluZyB0aGUgZWxlbWVudC5cbiAgICogVGhpcyB3aWxsIG92ZXJyaWRlIHByb2JhYmx5IHlvdXIgQ1NTIHNldHR0aW5nc1xuICAgKi9cbiAgY29sb3I/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBTZXQgYSB2YWx1ZSBiZXR3ZWVuIDEgYW5kIDM2MCBkZWdyZWVzIHRvIGxldCB0aGUgd29yZCBhcHBlYXIgcm90YXRlZFxuICAgKi9cbiAgcm90YXRlPzogbnVtYmVyO1xuICAvKipcbiAgICogRGVmaW5lIGEgdG9vbHRpcCB0ZXh0XG4gICAqL1xuICB0b29sdGlwPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIFNwZWNpZnkgb3B0aW9ucyBmb3IgdGhlIHdob2xlIFRhZ0Nsb3VkXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ2xvdWRPcHRpb25zIHtcbiAgLyoqXG4gICAqIERlZmluZXMgdGhlIHdpZHRoIG9mIHRoZSBUYWNDbG91ZCBjb250YWluZXJcbiAgICovXG4gIHdpZHRoPzogbnVtYmVyO1xuICAvKipcbiAgICogRGVmaW5lcyB0aGUgaGVpZ2h0IG9mIHRoZSBUYWNDbG91ZCBjb250YWluZXJcbiAgICovXG4gIGhlaWdodD86IG51bWJlcjtcbiAgLyoqXG4gICAqIERlZmluZXMgd2VhdGhlciBlbGVtZW50cyB0aGF0IGRvZXMgbm90IGZpdCBpbiB0aGUgY29udGFpbmVyIHNob3VsZCBiZSBoaWRkZW4gb3IganVzdCBjdXR0ZWQgYXQgdGhlIGNvbnRhaW5lciBib3JkZXJzXG4gICAqL1xuICBvdmVyZmxvdz86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBEZWZpbmVzIHdlYXRoZXIgdG8gdXNlIHN0cmljdCB3ZWlnaHQgb3IgY2FsY3VsYXRlIGl0IGJ5IGdpdmVuIHZhbHVlc1xuICAgKi9cbiAgc3RyaWN0PzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIERlZmluZSBPcHRpb24gd2hpY2ggd2lsbCB0YWtlIGVmZmVjdCB3aGVuIGhvdmVyaW5nIHdpdGggdGhlIGN1cnNvciBvdmVyIHRoZSBlbGVtZW50c1xuICAgKi9cbiAgem9vbU9uSG92ZXI/OiBab29tT25Ib3Zlck9wdGlvbnM7XG4gIC8qKlxuICAgKiBFbmFibGUgb3IgZGlzYWJsZSBhdXRvbWF0aWMgcmVzaXplIGlmIGJvdW5kYXJpZXMgYXJlIGNoYW5naW5nXG4gICAqL1xuICByZWFsaWduT25SZXNpemU/OiBib29sZWFuO1xuICAvKipcbiAgICogRW5hYmxlIG9yIGRpc2FibGUgcmFuZG9tbHkgZGV0ZXJtaW5pbmcgYW4gYW5nbGUgd2hlbiBpdCBpcyBub3QgZXhwbGljaXRseSBzZXRcbiAgICovXG4gIHJhbmRvbWl6ZUFuZ2xlPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIHN0ZXBzIGZvciB0aGUgbmV4dCBjaGVjayBpZiBlbGVtZW50IGZpdHMgaW50byBjbG91ZCAoY2lyY3VsYXIgZGV0ZWN0aW9uKVxuICAgKi9cbiAgc3RlcD86IG51bWJlcjtcbiAgLyoqXG4gICAqIEFjdGl2YXRlIGxvZ2dpbmcgZm9yIGRlYnVnIHB1cnBvc2VcbiAgICovXG4gIGxvZz86ICd3YXJuJyB8ICdkZWJ1ZycgfCBmYWxzZTtcbiAgLyoqXG4gICAqIERlZmluZSBhIGJhY2tncm91bmQgd2hpY2ggc2hvdWxkIGJlIHVzZWQgZm9yIHRoZSBjbG91ZC5cbiAgICogVGhlIHN5bnRheCBmb2xsb3dzIHRoZSBDU1MgYmFja2dyb3VuZCBwcm9wZXJ0eVxuICAgKiBAc2VlIGh0dHBzOi8vd3d3Lnczc2Nob29scy5jb20vY3NzcmVmL2NzczNfcHJfYmFja2dyb3VuZC5hc3BcbiAgICovXG4gIGJhY2tncm91bmQ/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBEZWZpbmUgdGhlIGJhc2ljIGZvbnQgd2hpY2ggc2hvdWxkIGJlIHVzZWQgZm9yIHRoZSBjbG91ZC5cbiAgICogVGhlIHN5bnRheCBmb2xsb3dzIHRoZSBDU1MgZm9udCBwcm9wZXJ0eVxuICAgKiBAc2VlIGh0dHBzOi8vd3d3Lnczc2Nob29scy5jb20vY3NzcmVmL3ByX2ZvbnRfZm9udC5hc3BcbiAgICovXG4gIGZvbnQ/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogU3BlY2lmeSBPcHRpb25zIGZvciBlbGVtZW50cyB0aGF0IHdpbGwgYmUgaG92ZXJlZCBieSB0aGUgY3Vyc29yXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgWm9vbU9uSG92ZXJPcHRpb25zIHtcbiAgLyoqXG4gICAqIFNldCB0aGUgc2NhbGUgZm9yIHRoZSB6b29tXG4gICAqL1xuICBzY2FsZTogbnVtYmVyO1xuICAvKipcbiAgICogU2V0IG9wdGlvbmFsbHkgYSB0aW1lIHZhbHVlIGZvciB0aGUgdHJhbnNpdGlvbiBmcm9tIHRoZSBjdXJyZW50IGVsZW1lbnQgc2l6ZSB0byB0aGlzIG9uZSBkZWZpbmVzIGluIGBzY2FsZWAuXG4gICAqL1xuICB0cmFuc2l0aW9uVGltZT86IG51bWJlcjtcbiAgLyoqXG4gICAqIFNldCBvcHRpb25hbGx5IGEgZGVsYXkgKGluIHNlY29uZHMpLiBTZXR0aW5nIHRoaXMgZS5nLiB0byBgMmAgd2lsbCBoYXZlIHRoZSBlZmZlY3QgdGhhdCB0aGUgem9vbSB3aWxsIGFwcGVhciB3aXRoIDJzIGRlbGF5IHRpbWUuXG4gICAqL1xuICBkZWxheT86IG51bWJlcjtcbiAgLyoqXG4gICAqIERlZmluZSBhIGNvbG9yIHdoaWNoIHdpbGwgcmVwbGFjZSB0aGUgY3VycmVudCBjb2xvciB3aGVuIGhvdmVyaW5nIG92ZXIgdGhlIGl0ZW0uXG4gICAqIFRoaXMgd2lsbCBvdmVycmlkZSBwcm9iYWJseSB5b3VyIENTUyBzZXR0dGluZ3NcbiAgICovXG4gIGNvbG9yPzogc3RyaW5nO1xufVxuIl19